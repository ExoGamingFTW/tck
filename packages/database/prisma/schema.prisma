generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Action {
  ACCOUNT_CREATE
  ACCOUNT_BAN
  ACCOUNT_UNBAN
  ACCOUNT_LOGIN
}

enum Permission {
  ADMIN
  ACCESS_ADMIN_PANEL
  MANAGE_USERS
  MANAGE_GIVEAWAYS
  MANAGE_LEADERBOARDS
}

model UserAction {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  action    Action
  ip        String
  timestamp Int
}

model UserAccounts {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.ObjectId

  twitch  String?
  discord String?
  kick    String?
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  username String @unique
  email    String @unique
  password String
  apiKey   String @unique

  accounts    UserAccounts?
  displayName String
  isAnonymous Boolean       @default(false)

  actions UserAction[]
  points  Int          @default(0)

  permissions Permission[]

  isBanned   Boolean @default(false)
  isVerified Boolean @default(false)

  giveawayEntries GiveawayEntry[]
}

model BannedIp {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  ip         String @unique
  bannedBy   String
  bannedById String @db.ObjectId
  reason     String
  timestamp  Int    @default(0)
}

model LeaderboardSpot {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  username      String       @unique
  amount        Int
  leaderboard   Leaderboard? @relation(fields: [leaderboardId], references: [id])
  leaderboardId String?      @db.ObjectId
}

model Leaderboard {
  id    String            @id @default(auto()) @map("_id") @db.ObjectId
  type  String            @unique
  spots LeaderboardSpot[]
}

model GiveawayEntry {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  timestamp Int

  slot       Int
  giveaway   Giveaway @relation(fields: [giveawayId], references: [id])
  giveawayId String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
}

model Giveaway {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  brand             String
  value             Int
  maxEntries        Int
  image             String
  entries           GiveawayEntry[]
  timestampCreation Int
  timestampEnd      Int
}
